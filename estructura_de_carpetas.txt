La estructura consta de una serie de carpetas y archivos que nos hacen trabajar de forma ordenada y eficiente. La estructura es la siguiente:

Gemfile el archivo donde declaramos las dependencias (gemas de nuestro proyecto)


app: organiza los componentes de nuestra aplicacion; en esta carpeta vamos a tener todo el codigo relacionado con la logica de nuestra aplicacion

app/assets: son los archivos requeridos por nuestra aplicacion del lado del front-end, esto es, archivos de javascript, css o imagenes(esta dividida en carpetas)

app/controllers: es donde se ubican los controladores de Rails que son los responsables de conectar las vistas con los modelos(encargados de manejar las peticiones http y realizan la manipulacion y/o actualizacion de nuestros modelos)

app/helpers: contiene clases y metodos que nos ayudan a extraer logica reutilizable o complicada en la logica(para codigo que va a repetirse en varias vistas)

app/mailers: es donde se ubican los objetos encargados de tareas de envio de emails(si se requiere)

app/models: contiene las clases que contienen la logica de nuestra aplicacion y son las encargadas de conectarse a la base de datos

app/views: contiene todo lo que va de cara al usuario, podemos usar html o erb (html con ruby incrustado para lograr cierta interaccion con las vistas)

config: los archivos de configuracion (de nuestra aplicacion)

config/environments/: rails maneja tres entornos  (config diferentes para cada caso) de trabajo: desarollo (development), pruebas (test) y produccion (production). Rails es bastante inteligente para ofrecernos valores por default adecuados a cada entorno, pero podemos configurarlos segun nuestras necesidades, para las personas que usamos rails se nos sugiere hacer pruebas de nuestra aplicacion automatizadas

config/initializers: contiene codigo que se ejecuta cuando levantamos el server, contiene configuraciones de codigo que se necesitan ejecutar antes de que empiece a cargar la app (APIS por ejemplo)

config/database.yml: (yml: comun para guardar archivos con info de llave:valor) contiene toda la info necesaria para la configuracion y coneccion a la base de datos (por defecto vamos con sqlite)

config/routes.rb: es el archivo donde vienes las indicaciones de como mapear las rutas de nuestra aplicacion a los controladores de la misma

config/secrets.yml: se usa para guardar la informacion sensible (llaves de usuario, tokens, cuentas de correo) existen otras estrategias para manejar esta informacion delicada

db: contiene archivos relacionados a la base de datos

db/migrate:  asi se encuentran las migraciones que vamos haciendo para nuestra aplicacion
db/schema: la estructura actual de nuestra base de datos

lib: codigo de terceros, que nuestra app necesita pero no es creado por nosotros, librerias de terceros

log: bitacoras. El registro de eventos que pasan en nuestra aplicacion(peticiones que se hacen a los controladores)

public:  los archivos publicos como paginas estaticas

